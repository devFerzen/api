{"remainingRequest":"C:\\Users\\aqual\\repositorioWerk\\playgroundWerk\\werkvue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\aqual\\repositorioWerk\\playgroundWerk\\werkvue\\src\\actions\\objetoWerk.js","dependencies":[{"path":"C:\\Users\\aqual\\repositorioWerk\\playgroundWerk\\werkvue\\src\\actions\\objetoWerk.js","mtime":1620010376819},{"path":"C:\\Users\\aqual\\repositorioWerk\\playgroundWerk\\werkvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\aqual\\repositorioWerk\\playgroundWerk\\werkvue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL2FxdWFsL3JlcG9zaXRvcmlvV2Vyay9wbGF5Z3JvdW5kV2Vyay93ZXJrdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwoKLyoqDQogKiBAZmlsZQ0KICogTXV0YWNpb25lcyBPYmpldG9zIFdlcmsuLg0KICoNCiAqIERpY2hhIGV4cG9ydGFjacOzbiBlcyDDum5pY2FtZW50ZSB1c2FkYSBwYXJhIENvbXBvbmVudGVzDQogKiBjb24gY29uc3VtbyBkZSBpbmZvcm1hY2nDs24gZGUgdW4gPDwgT2JqZXRvV2VyayA+Pg0KKi8KaW1wb3J0ICogYXMgT1dNdXRhdGlvbnMgZnJvbSAnLi4vZ3JhcGhxbC9tdXRhdGlvbnMvb2JqZXRvV2Vya011dGF0aW9ucy5qcyc7IC8vUXVpesOhcyBhcXXDrSBlc3RhcsOhbiBmdW5jaW9uZXMgcHJpdmFkYXMgcGFyYSByZWNoYXphciBsaWtlcywgaW52aXRhciBhIHN1YgovL2NyaWJpciB2YWxpZGFjaW9uZXMsIGV0Yy4uLgoKZXhwb3J0IGRlZmF1bHQgewogIG1ldGhvZHM6IHsKICAgIGVzdGF0dXNBY3Rpb246IGZ1bmN0aW9uIGVzdGF0dXNBY3Rpb24oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBQYXJhbXMsIHJlc3VsdGFkb011dGFjaW9uOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIFBhcmFtcyA9IHsKICAgICAgICAgICAgICAgICAgaWQ6IF90aGlzLm9iamV0b1dlcmsuaWQKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBQYXJhbXMuaW5wdXQgPSB7CiAgICAgICAgICAgICAgICAgIG9iamV0b193ZXJrOiB7CiAgICAgICAgICAgICAgICAgICAgZXN0YXR1czogewogICAgICAgICAgICAgICAgICAgICAgdGlwbzogIV90aGlzLm9iamV0b1dlcmsub2JqZXRvX3dlcmsuZXN0YXR1cy50aXBvCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICBtdXRhdGlvbjogT1dNdXRhdGlvbnMuV0VSS09CSkVDVF9FU1RBVFVTLAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBQYXJhbXM6IFBhcmFtcwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzdWx0YWRvTXV0YWNpb24gPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWNjaW9uZXNQb3N0dWxhbnRlczogZnVuY3Rpb24gYWNjaW9uZXNQb3N0dWxhbnRlcyhQYXJhbXMsIGFjY2lvbiwgaWRWYWNhbnRlKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3VsdGFkb011dGFjaW9uOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgICAgICAgbXV0YXRpb246IE9XTXV0YXRpb25zLldFUktPQkpFQ1RfUE9TVFVMQU5URVMsCiAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgICAgICAgIFBhcmFtczogUGFyYW1zLAogICAgICAgICAgICAgICAgICAgIGFjY2lvbjogYWNjaW9uLAogICAgICAgICAgICAgICAgICAgIGlkVmFjYW50ZTogaWRWYWNhbnRlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXN1bHRhZG9NdXRhY2lvbiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInJlc3VsdGFkb011dGFjaW9uLT5BY2Npb25lc1Bvc3R1bGFudGVzLT4iLCByZXN1bHRhZG9NdXRhY2lvbik7IC8vQUZTUy0gQ2FtYmlvOiByZXRvcm5hciB0b2RvIGVsIG9iamV0bz8/CgogICAgICAgICAgICAgICAgLyppZighcmVzdWx0YWRvTXV0YWNpb24ub2spew0KICAgICAgICAgICAgICAgICAgdGhpcy4kYXBvbGxvLm11dGF0ZSh7DQogICAgICAgICAgICAgICAgICAgICAgbXV0YXRpb246IE9XTXV0YXRpb25zLlJFUE9SVF9BQ1RJT05TLA0KICAgICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogew0KICAgICAgICAgICAgICAgICAgICAgICAgaWQsDQogICAgICAgICAgICAgICAgICAgICAgICBlc3RhZG8NCiAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgfSovCgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3VsdGFkb011dGFjaW9uLm9rKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcmVjbHV0YWRvckFjdGlvbjogZnVuY3Rpb24gcmVjbHV0YWRvckFjdGlvbihpZCwgZXN0YWRvRGF0YSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciByZXN1bHRhZG9NdXRhY2lvbjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICAgICAgICAgIG11dGF0aW9uOiBPV011dGF0aW9ucy5SRVBPUlRfQUNUSU9OUywKICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IGlkLAogICAgICAgICAgICAgICAgICAgIGVzdGFkb0RhdGE6IGVzdGFkb0RhdGEKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3VsdGFkb011dGFjaW9uID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzdWx0YWRvTXV0YWNpb24pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBvYmpldG9XZXJrTGlrZUFjdGlvbjogZnVuY3Rpb24gb2JqZXRvV2Vya0xpa2VBY3Rpb24oUGFyYW1zLCBhY3Rpb24pIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgcmVzdWx0YWRvTXV0YWNpb247CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczQuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICBtdXRhdGlvbjogT1dNdXRhdGlvbnMuV0VSS09CSkVDVF9MSUtJTkcsCiAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgICAgICAgIFBhcmFtczogUGFyYW1zLAogICAgICAgICAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXN1bHRhZG9NdXRhY2lvbiA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInJlc3VsdGFkb011dGFjaW9uLT5PV0xpa2VBY3Rpb24tPiIsIHJlc3VsdGFkb011dGFjaW9uKTsgLy9BRlNTLSBDYW1iaW86IHJldG9ybmFyIHRvZG8gZWwgb2JqZXRvPz8KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgcmVzdWx0YWRvTXV0YWNpb24uZGF0YS5saWtpbmdPYmpldG9XZXJrKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgX3RoaXM0LmVycm9yTXV0YXRlID0gX2NvbnRleHQ0LnQwLm1lc3NhZ2U7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoX2NvbnRleHQ0LnQwLm1lc3NhZ2UpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9iamV0b1dlcmtGYXZvcmluZzogZnVuY3Rpb24gb2JqZXRvV2Vya0Zhdm9yaW5nKFBhcmFtcywgYWN0aW9uKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgdmFyIHJlc3VsdGFkb011dGFjaW9uOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM1LiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgICAgICAgbXV0YXRpb246IE9XTXV0YXRpb25zLldFUktPQkpFQ1RfRkFWT1JJTkcsCiAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgICAgICAgIFBhcmFtczogUGFyYW1zLAogICAgICAgICAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXN1bHRhZG9NdXRhY2lvbiA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInJlc3VsdGFkb011dGFjaW9uLT5PV0Zhdm9yaW5nLT4iLCByZXN1bHRhZG9NdXRhY2lvbik7IC8vQUZTUy0gQ2FtYmlvOiByZXRvcm5hciB0b2RvIGVsIG9iamV0bz8/CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIHJlc3VsdGFkb011dGFjaW9uKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgX3RoaXM1LmVycm9yTXV0YXRlID0gX2NvbnRleHQ1LnQwLm1lc3NhZ2U7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoX2NvbnRleHQ1LnQwLm1lc3NhZ2UpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1LCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9iamV0b1dlcmtOZXdVcGRhdGU6IGZ1bmN0aW9uIG9iamV0b1dlcmtOZXdVcGRhdGUoUGFyYW1zLCBhY3Rpb24pIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgICB2YXIgcmVzdWx0YWRvTXV0YWNpb247CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczYuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICBtdXRhdGlvbjogYWN0aW9uID09PSAnJyA/IE9XTXV0YXRpb25zLldFUktPQkpFQ1RfTkVXIDogT1dNdXRhdGlvbnMuV0VSS09CSkVDVF9VUERBVEUsCiAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgICAgICAgIFBhcmFtczogUGFyYW1zCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXN1bHRhZG9NdXRhY2lvbiA9IF9jb250ZXh0Ni5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coInJlc3VsdGFkb011dGFjaW9uLT5PV05ld1VwZGF0ZS0+IiwgcmVzdWx0YWRvTXV0YWNpb24pOyAvL0FGU1MtIENhbWJpbzogcmV0b3JuYXIgdG9kbyBlbCBvYmpldG8/PwoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDYuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRhZG9NdXRhY2lvbik7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni50MCA9IF9jb250ZXh0NlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihfY29udGV4dDYudDAuX21lc3NhZ2UgfHwgX2NvbnRleHQ2LnQwLm1lc3NhZ2UpOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU2LCBudWxsLCBbWzAsIDhdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9iamV0b1dlcmtJbWFnZXNOZXc6IGZ1bmN0aW9uIG9iamV0b1dlcmtJbWFnZXNOZXcoSW1hZ2VzUGFyYW1zLCBvYmpldG9JZCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU3KCkgewogICAgICAgIHZhciByZXN1bHRhZG9NdXRhY2lvbjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTckKF9jb250ZXh0NykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDcucHJldiA9IF9jb250ZXh0Ny5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ3LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNy4kYXBvbGxvLm11dGF0ZSh7CiAgICAgICAgICAgICAgICAgIG11dGF0aW9uOiBPV011dGF0aW9ucy5XRVJLT0JKRUNUX0lNQUdFU19ORVcsCiAgICAgICAgICAgICAgICAgIHZhcmlhYmxlczogewogICAgICAgICAgICAgICAgICAgIEltYWdlc1BhcmFtczogSW1hZ2VzUGFyYW1zLAogICAgICAgICAgICAgICAgICAgIGlkOiBvYmpldG9JZAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzdWx0YWRvTXV0YWNpb24gPSBfY29udGV4dDcuc2VudDsKICAgICAgICAgICAgICAgIC8vQUZTUyAtIEFxdWkgc2UgcG9uZHLDoSBsYXMgZnVuY2lvbiBkZSBlbWl0aXIgZWwgZXJyb3IgbyDDqXhpdG8/CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiSW1hZ2VOZXctPnJlc3VsdGFkb011dGFjaW9uOiAiLCByZXN1bHRhZG9NdXRhY2lvbik7IC8vQUZTUy0gQ2FtYmlvOiByZXRvcm5hciB0b2RvIGVsIG9iamV0bz8/CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5hYnJ1cHQoInJldHVybiIsIHJlc3VsdGFkb011dGFjaW9uKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQ3LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQ3LnQwID0gX2NvbnRleHQ3WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yOiBvYmpldG9XZXJrSW1hZ2VzTmV3Iik7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoX2NvbnRleHQ3LnQwLl9tZXNzYWdlIHx8IF9jb250ZXh0Ny50MC5tZXNzYWdlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNywgbnVsbCwgW1swLCA4XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBvYmpldG9XZXJrSW1hZ2VuZXNQb3NpdGlvblVwZGF0ZTogZnVuY3Rpb24gb2JqZXRvV2Vya0ltYWdlbmVzUG9zaXRpb25VcGRhdGUoaWQsIG9yaWdpbiwgdGFyZ2V0KSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTgoKSB7CiAgICAgICAgdmFyIHJlc3VsdGFkb011dGFjaW9uOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDgucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM4LiRhcG9sbG8ubXV0YXRlKHsKICAgICAgICAgICAgICAgICAgbXV0YXRpb246IE9XTXV0YXRpb25zLldFUktPQkpFQ1RfSU1BR0VTX1VQREFURVBPU0lUSU9OLAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgICAgICAgICAgb3JpZ2luOiBvcmlnaW4sCiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiB0YXJnZXQKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3VsdGFkb011dGFjaW9uID0gX2NvbnRleHQ4LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygicmVzdWx0YWRvTXV0YWNpb24tPkltYWdlblBvc2l0aW9uVXBkYXRlLT4iLCByZXN1bHRhZG9NdXRhY2lvbik7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LmFicnVwdCgicmV0dXJuIiwgcmVzdWx0YWRvTXV0YWNpb24pOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDgucHJldiA9IDg7CiAgICAgICAgICAgICAgICBfY29udGV4dDgudDAgPSBfY29udGV4dDhbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiRXJyb3I6IG9iamV0b1dlcmtJbWFnZW5lc1Bvc2l0aW9uVXBkYXRlIik7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoX2NvbnRleHQ4LnQwLl9tZXNzYWdlIHx8IF9jb250ZXh0OC50MC5tZXNzYWdlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOCwgbnVsbCwgW1swLCA4XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBvYmpldG9XZXJrSW1hZ2VzRGVsZXRlOiBmdW5jdGlvbiBvYmpldG9XZXJrSW1hZ2VzRGVsZXRlKEltYWdlc1BhcmFtcywgb2JqZXRvSWQpIHsKICAgICAgdmFyIF90aGlzOSA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOSgpIHsKICAgICAgICB2YXIgcmVzdWx0YWRvTXV0YWNpb247CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU5JChfY29udGV4dDkpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ5LnByZXYgPSBfY29udGV4dDkubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0OS5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0OS5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczkuJGFwb2xsby5tdXRhdGUoewogICAgICAgICAgICAgICAgICBtdXRhdGlvbjogT1dNdXRhdGlvbnMuV0VSS09CSkVDVF9JTUFHRVNfREVMRVRFLAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBJbWFnZXNQYXJhbXM6IEltYWdlc1BhcmFtcywKICAgICAgICAgICAgICAgICAgICBpZDogb2JqZXRvSWQKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3VsdGFkb011dGFjaW9uID0gX2NvbnRleHQ5LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygib2J3SW1hZ2VEZWxldGUtPnJlc3VsdGFkb011dGFjaW9uOiIsIHJlc3VsdGFkb011dGFjaW9uKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuYWJydXB0KCJyZXR1cm4iLCByZXN1bHRhZG9NdXRhY2lvbik7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0OS5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0OS50MCA9IF9jb250ZXh0OVsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJvYndJbWFnZURlbGV0ZS0+ZXJyb3I6Iik7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoX2NvbnRleHQ5LnQwLl9tZXNzYWdlIHx8IF9jb250ZXh0OS50MC5tZXNzYWdlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOSwgbnVsbCwgW1swLCA4XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["C:/Users/aqual/repositorioWerk/playgroundWerk/werkvue/src/actions/objetoWerk.js"],"names":["OWMutations","methods","estatusAction","Params","id","objetoWerk","input","objeto_werk","estatus","tipo","$apollo","mutate","mutation","WERKOBJECT_ESTATUS","variables","resultadoMutacion","accionesPostulantes","accion","idVacante","WERKOBJECT_POSTULANTES","console","log","ok","reclutadorAction","estadoData","REPORT_ACTIONS","objetoWerkLikeAction","action","WERKOBJECT_LIKING","data","likingObjetoWerk","errorMutate","message","Error","objetoWerkFavoring","WERKOBJECT_FAVORING","objetoWerkNewUpdate","WERKOBJECT_NEW","WERKOBJECT_UPDATE","_message","objetoWerkImagesNew","ImagesParams","objetoId","WERKOBJECT_IMAGES_NEW","objetoWerkImagenesPositionUpdate","origin","target","WERKOBJECT_IMAGES_UPDATEPOSITION","objetoWerkImagesDelete","WERKOBJECT_IMAGES_DELETE"],"mappings":"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","sourcesContent":["/**\r\n * @file\r\n * Mutaciones Objetos Werk..\r\n *\r\n * Dicha exportación es únicamente usada para Componentes\r\n * con consumo de información de un << ObjetoWerk >>\r\n*/\r\nimport * as OWMutations from '../graphql/mutations/objetoWerkMutations.js';\r\n\r\n//Quizás aquí estarán funciones privadas para rechazar likes, invitar a sub\r\n//cribir validaciones, etc...\r\n\r\nexport default {\r\n  methods: {\r\n    async estatusAction(){\r\n\r\n      let Params = {\r\n        id: this.objetoWerk.id,\r\n      };\r\n      Params.input = {\r\n        objeto_werk: {\r\n          estatus:{\r\n            tipo: !this.objetoWerk.objeto_werk.estatus.tipo\r\n          }\r\n        }\r\n      }\r\n\r\n      const resultadoMutacion = await this.$apollo.mutate({\r\n          mutation: OWMutations.WERKOBJECT_ESTATUS,\r\n          variables: {\r\n            Params\r\n          }\r\n      });\r\n\r\n    },\r\n\r\n    async accionesPostulantes(Params, accion, idVacante){\r\n      const resultadoMutacion = await this.$apollo.mutate({\r\n        mutation: OWMutations.WERKOBJECT_POSTULANTES,\r\n        variables: {\r\n          Params: Params,\r\n          accion: accion,\r\n          idVacante: idVacante\r\n        }\r\n      });\r\n      console.log(\"resultadoMutacion->AccionesPostulantes->\",resultadoMutacion); //AFSS- Cambio: retornar todo el objeto??\r\n\r\n      /*if(!resultadoMutacion.ok){\r\n        this.$apollo.mutate({\r\n            mutation: OWMutations.REPORT_ACTIONS,\r\n            variables: {\r\n              id,\r\n              estado\r\n            }\r\n          });\r\n        }*/\r\n        return resultadoMutacion.ok;\r\n      },\r\n\r\n    async reclutadorAction(id, estadoData){\r\n\r\n      const resultadoMutacion = await this.$apollo.mutate({\r\n        mutation: OWMutations.REPORT_ACTIONS,\r\n        variables: {\r\n          id: id,\r\n          estadoData: estadoData\r\n        }\r\n      });\r\n\r\n      /*if(!resultadoMutacion.ok){\r\n        this.$apollo.mutate({\r\n            mutation: OWMutations.REPORT_ACTIONS,\r\n            variables: {\r\n              id,\r\n              estado\r\n            }\r\n          });\r\n        }*/\r\n\r\n        return resultadoMutacion;\r\n      },\r\n\r\n    async objetoWerkLikeAction(Params, action){\r\n      let resultadoMutacion;\r\n      try {\r\n          resultadoMutacion = await this.$apollo.mutate({\r\n            mutation: OWMutations.WERKOBJECT_LIKING,\r\n            variables: {\r\n              Params: Params,\r\n              action: action\r\n            }\r\n          });\r\n          console.log(\"resultadoMutacion->OWLikeAction->\",resultadoMutacion); //AFSS- Cambio: retornar todo el objeto??\r\n          return resultadoMutacion.data.likingObjetoWerk\r\n      } catch (e) {\r\n        this.errorMutate = e.message;\r\n        throw new Error(e.message);\r\n      }\r\n    },\r\n\r\n    async objetoWerkFavoring(Params, action){\r\n      try {\r\n        const resultadoMutacion = await this.$apollo.mutate({\r\n          mutation: OWMutations.WERKOBJECT_FAVORING,\r\n          variables: {\r\n            Params: Params,\r\n            action: action\r\n          }\r\n        });\r\n        console.log(\"resultadoMutacion->OWFavoring->\",resultadoMutacion); //AFSS- Cambio: retornar todo el objeto??\r\n        return resultadoMutacion;\r\n      } catch (e) {\r\n        this.errorMutate = e.message;\r\n        throw new Error(e.message);\r\n      }\r\n    },\r\n\r\n    async objetoWerkNewUpdate(Params, action){\r\n      try {\r\n        const resultadoMutacion = await this.$apollo.mutate({\r\n          mutation: action === '' ? OWMutations.WERKOBJECT_NEW : OWMutations.WERKOBJECT_UPDATE ,\r\n          variables: {\r\n            Params: Params\r\n          }\r\n        });\r\n        console.log(\"resultadoMutacion->OWNewUpdate->\",resultadoMutacion); //AFSS- Cambio: retornar todo el objeto??\r\n        return resultadoMutacion;\r\n      } catch (e) {\r\n        throw new Error(e._message || e.message);\r\n      }\r\n    },\r\n\r\n    async objetoWerkImagesNew(ImagesParams, objetoId){\r\n      try {\r\n        const resultadoMutacion = await this.$apollo.mutate({\r\n          mutation: OWMutations.WERKOBJECT_IMAGES_NEW,\r\n          variables: {\r\n            ImagesParams: ImagesParams,\r\n            id: objetoId\r\n          }\r\n        });\r\n        //AFSS - Aqui se pondrá las funcion de emitir el error o éxito?\r\n        console.log(\"ImageNew->resultadoMutacion: \",resultadoMutacion); //AFSS- Cambio: retornar todo el objeto??\r\n        return resultadoMutacion;\r\n      } catch (e) {\r\n        console.log(\"Error: objetoWerkImagesNew\");\r\n        throw new Error(e._message || e.message);\r\n      }\r\n    },\r\n\r\n    async objetoWerkImagenesPositionUpdate( id, origin, target ){\r\n      try {\r\n        const resultadoMutacion = await this.$apollo.mutate({\r\n          mutation: OWMutations.WERKOBJECT_IMAGES_UPDATEPOSITION,\r\n          variables: {\r\n            id: id,\r\n            origin: origin,\r\n            target: target\r\n          }\r\n        });\r\n        console.log(\"resultadoMutacion->ImagenPositionUpdate->\",resultadoMutacion);\r\n        return resultadoMutacion;\r\n      } catch (e) {\r\n        console.log(\"Error: objetoWerkImagenesPositionUpdate\");\r\n        throw new Error(e._message || e.message);\r\n      }\r\n    },\r\n\r\n    async objetoWerkImagesDelete(ImagesParams, objetoId){\r\n      try {\r\n        const resultadoMutacion = await this.$apollo.mutate({\r\n          mutation: OWMutations.WERKOBJECT_IMAGES_DELETE,\r\n          variables: {\r\n            ImagesParams: ImagesParams,\r\n            id: objetoId\r\n          }\r\n        });\r\n        console.log(\"obwImageDelete->resultadoMutacion:\",resultadoMutacion);\r\n        return resultadoMutacion;\r\n      } catch (e) {\r\n        console.log(\"obwImageDelete->error:\");\r\n        throw new Error(e._message || e.message);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}]}